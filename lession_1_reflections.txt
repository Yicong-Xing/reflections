思考:查看文件的两个版本之间的差异如何帮助你了解引入的错误？
答:查看文件的两个版本之间的差异可以快速了解新引入内容所产生的不同结果.

思考:从长远来看，能轻松访问文件的整个历史记录将如何提高编程者的效率？
答:1.可以快速找到错误产生的原因及位置.
   2.可以对比各个历史方案的优劣,优化选择.
   3.对于重大不可预测的错误可以快速恢复.
   4.快速回顾重要保存节点.

思考:你认为，手动选择何时创建提交（像在 Git 中做的那样）与自动保存版本（如 Google Docs 所做的那样）各有何优缺点？
答:手动保存更具有目的性及逻辑性,使提交更具有意义并且容易读懂,但是会增加一定工作量;自动保存更方便及可靠,但是自动保存会使提交变得繁杂难懂.

思考:如何看待一些版本控制系统（例如 Git）允许在一次提交中保存多个文件，而其他系统（例如 Google Docs）单独对待每个文件？
答:一次提交中保存多个文件更方便于管理有关联关系的代码文件.

思考:如何使用命令 git log 和 git diff 来查看文件的历史记录？
答:git log 命令列出文件的历史版本,利用git diff 命令对比两个历史文件间的更改.

思考:使用版本控制，如何让你更有信心进行有可能会造成破坏的更改？
答:版本控制可以方便地恢复到之前的版本,所有可以放心地进行较为激进的更改.

思考:现在你已设置了工作空间，你想尝试使用 Git 来做些什么？
答:托管自己的第一个项目,利用git帮助开发完成一个小项目.